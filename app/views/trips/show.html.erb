<% content_for :title, Footprint32::APP_NAME %>
<% content_for :head do %>
  <script type="text/javascript">
    var map;
    var place_marker;
    var place_icon;
    var place_latitude = 0;
    var place_longitude = 0;
    var myLatlng;
    var place_info = {};
    var maininfowindow;
    var allUploadedInformation = new Array();
    var zIndex = 0;
    var markers = [];
    var dialog;
    var form;
    var marker_distance = 200;

    $(document).ready(function(){

      function updateMap() {
        marker_distance = $( "#marker_distance" ).val();
        $.ajax("<%= ajax_read_all_data_user_trips_path(@user) %>"+"?trip_id="+"<%= @trip.id %>"+"&distance="+marker_distance , function(data) {
        });
        display_map_chart();
        dialog.dialog( "close" );
      }
      dialog = $( "#dialog-form" ).dialog({
        autoOpen: false,
        height: 300,
        width: 400,
        modal: true,
        buttons: {
          "Update": updateMap,
          Cancel: function() {
          dialog.dialog( "close" );
          }
        },
        close: function() {
          form[ 0 ].reset();
          //allFields.removeClass( "ui-state-error" );
        }
      });
      
      form = dialog.find( "form" ).on( "submit", function( event ) {
        event.preventDefault();
        updateMap();
      });
      $( "#trip_setting" ).button().on( "click", function() {
        dialog.dialog( "open" );
      });

      $( "#trip_tabs" ).tabs();
      myLatlng = new google.maps.LatLng(place_latitude, place_longitude);
      var mapOptions = {
        zoom: 15,
        //minZoom: 6,
        //maxZoom: 18,
        center: myLatlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("discover"), mapOptions);

      place_marker = new google.maps.Marker({
        position: new google.maps.LatLng(place_latitude, place_longitude),
        map: map
      });
      display_map_chart();

      function display_map_chart()
      {

      clearOverlays();
      var myVarsJSON = $("#json_encode").html(),
        dataJson = $.parseJSON(myVarsJSON);

      if (dataJson)
      {
        allUploadedInformation = dataJson;
        var latMean = 0;
        var lngMean = 0;
        counter = 0;
        var datasets = {
        "dataSpeed": {
            label: "Vehicle Speed (km/h)",
            data: []
        },
        "dataRpm": {
            label: "Engine RPM",
            data: []
        },
        "dataEngineTemp": {
            label: "Engine Temperature (\xB0C)",
            data: []
        },
        "dataAirTemp": {
            label: "Intake Air Temperature (\xB0C)",
            data: []
        },
        "dataValve": {
            label: "Throttle Valve Position (%)",
            data: []
        },
        "dataGear": {
            label: "Gear Position",
            data: []
        }};
        for(var i=0;i<dataJson.length;i++){
            var trip = dataJson[i];
            for(var j=0;j<trip.length;j++){
                var markerTrip = trip[j];
                latMean+=markerTrip.lat;
                lngMean+=markerTrip.lng;
                if(j==0){
                    addTrackMarker(0, markerTrip.lat, markerTrip.lng,i,j);
                }else if(j==trip.length-1){
                    addTrackMarker(2, markerTrip.lat, markerTrip.lng,i,j);
                }else{
                    addTrackMarker(1, markerTrip.lat, markerTrip.lng,i,j);
                }
                if (typeof trip[j].additional != 'undefined')
                {
                  var x_temp = counter;
                  if (trip[j].additional.length > 0)
                  {
                    datasets["dataSpeed"].data.push([x_temp, trip[j].additional[1]]);
                    datasets["dataRpm"].data.push([x_temp, trip[j].additional[2]]);
                    datasets["dataEngineTemp"].data.push([x_temp, trip[j].additional[3]]);
                    datasets["dataAirTemp"].data.push([x_temp, trip[j].additional[4]]);
                    datasets["dataValve"].data.push([x_temp, trip[j].additional[5]]);
                    datasets["dataGear"].data.push([x_temp, trip[j].additional[13]]);
                  }
                  else
                  {
                    datasets["dataSpeed"].data.push([x_temp,0]);
                    datasets["dataRpm"].data.push([x_temp,0]);
                    datasets["dataEngineTemp"].data.push([x_temp,0]);
                    datasets["dataAirTemp"].data.push([x_temp,0]);
                    datasets["dataValve"].data.push([x_temp,0]);
                    datasets["dataGear"].data.push([x_temp,0]);
                  }
                }
                counter++;
            }
        }
        latMean = latMean/counter;
        lngMean = lngMean/counter;
        map.setCenter(new google.maps.LatLng(latMean, lngMean));
        map.setZoom(14);

        var i = 0;
        $.each(datasets, function(key, val) {
            val.color = i;
            ++i;
        });

        var choiceContainer = $("#choices");

        function plotAccordingToChoices() {
          var dataTemp = [];

          choiceContainer.find("input:checked").each(function () {
              var key = $(this).attr("name");
              if (key && datasets[key])
                  dataTemp.push(datasets[key]);
          });

          if (dataTemp.length > 0)
              $.plot($("#flot-graph"), dataTemp, {
                  grid: {
                    hoverable: true,
                    clickable: true
                  },
                  yaxis: { min: 0 },
                  xaxis: { tickDecimals: 0 }
              });

              $("<div id='tooltip'></div>").css({
                  position: "absolute",
                  display: "none",
                  border: "1px solid #fdd",
                  padding: "2px",
                  "background-color": "#fee",
                  opacity: 0.80
              }).appendTo("body");
              $("#flot-graph").bind("plothover", function (event, pos, item) {
                  if (item) {
                    var x = item.datapoint[0].toFixed(2),
                      y = item.datapoint[1].toFixed(2);

                    $("#tooltip").html(item.series.label + " = " + y)
                      .css({top: item.pageY+5, left: item.pageX+5})
                      .fadeIn(200);
                  } else {
                    $("#tooltip").hide();
                  }
              });
              $("#flot-graph").bind("plotclick", function (event, pos, item) {
                if (item) {
                  $('#vehicleSpeedData').text(datasets["dataSpeed"].data[item.dataIndex][1]);
                  $('#engineRpmData').text(datasets["dataRpm"].data[item.dataIndex][1]);
                  $('#engineTempData').text(datasets["dataEngineTemp"].data[item.dataIndex][1]);
                  $('#airTempData').text(datasets["dataAirTemp"].data[item.dataIndex][1]);
                  $('#valvePosData').text(datasets["dataValve"].data[item.dataIndex][1]);
                  $('#gearPosData').text(datasets["dataGear"].data[item.dataIndex][1]);
                }
              });
        }

        choiceContainer.find("input").click(plotAccordingToChoices);
        plotAccordingToChoices();
      }
      }
    });

    function createMarkerByLatLong(lat, lng){
        createMarker(new google.maps.LatLng(lat, lng));
    }

    function createMarker(location){
        var marker = new google.maps.Marker({
            map:map,
            draggable:false,
            animation: google.maps.Animation.DROP,
            position: location
        });
        google.maps.event.addListener(marker, 'click', function(){
            marker.setAnimation(google.maps.Animation.BOUNCE);
        });
        return marker;
    }



    function addTrackMarker(type,lat,lng,tripNum,indexNum) {
        var markerName = '';
        if(type==0){
            markerName = '/assets/images/marker_trip.gif';
        }else if(type==1){
            markerName = '/assets/images/marker_trip.gif';
        }else{
            markerName = '/assets/images/marker_trip.gif';
        }
        var image = new google.maps.MarkerImage(markerName,
            // This marker is 20 pixels wide by 32 pixels tall.
            new google.maps.Size(32, 32),
            // The origin for this image is 0,0.
            new google.maps.Point(0,0),
            // The anchor for this image is the base of the flagpole at 0,32.
            new google.maps.Point(16, 32));
        //var shadow = new google.maps.MarkerImage('/assets/images/shadow_marker.png',
        //    new google.maps.Size(29, 22),
        //    new google.maps.Point(0,0),
        //    new google.maps.Point(0, 22));
        var shape = {
            coord: [1, 1, 1, 33, 19, 33, 18 , 1],
            type: 'poly'
        };
        var myLatLng = new google.maps.LatLng(lat, lng);
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            //shadow: shadow,
            icon: image,
            shape: shape,
            title: "Marker",
            zIndex: zIndex
        });

        if (allUploadedInformation[tripNum][indexNum].additional)
        {
          var contentString = '<div class="infowindow_sr">'+
          '<div class="infowindow_image">'+ '<%= image_tag(get_profile_photo_url(@trip.user.profile_photo), :class => "photo_in_profile") %>' +
          '</div>'+
          '<div class="infowindow_content_sr">'+
          '<h2 class="bold_text">' + '<%= @trip.user.profile.full_name%>' + '</h2>' +
          '<h3 class="bold_text">' + 'BMW K1200S' + '</h3>' +
          '<h3>Speed[' + allUploadedInformation[tripNum][indexNum].additional[1] +' km/h], '+
          'RPM[' + allUploadedInformation[tripNum][indexNum].additional[2] +'], '+
          'Throttle[ ' + allUploadedInformation[tripNum][indexNum].additional[5] +'], '+
          'Gear[ ' + allUploadedInformation[tripNum][indexNum].additional[13] +'], '+
          'Engine[' + allUploadedInformation[tripNum][indexNum].additional[3] +'], '+
          'Air[' + allUploadedInformation[tripNum][indexNum].additional[4] +'], </h3>'+
          '</div>';
        }
        else
        {
          var contentString = '<div class="infowindow_sr">'+
          '<div class="infowindow_image">'+ '<%= image_tag(get_profile_photo_url(@trip.user.profile_photo), :class => "photo_in_profile") %>' +
          '</div>'+
          '<div class="infowindow_content_sr">'+
          '<h2 class="bold_text">' + '<%= @trip.user.profile.full_name%>' + '</h2>' +
          '<h3 class="bold_text">' + 'BMW K1200S' + '</h3>' +
          '</div>';
        }
      

        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        marker.infowindow = infowindow;
        marker.tripnum = tripNum;

        google.maps.event.addListener(marker, 'click', function() {
            infowindow.open(map,marker);
            //agar dapat zoom ketika hijau dan merah diklik
            if(type==0){
                green_clicked = marker;
            }else if(type==2){
                if(green_clicked!=null){
                    green_clicked.infowindow.close();
                    infowindow.close();
                    //zooming
                    var latlngbounds = new google.maps.LatLngBounds();
                    var latlng = allUploadedInformation[tripNum];

                    for ( var i = 0; i < latlng.length; i++ ){
                        latlngbounds.extend(new google.maps.LatLng(latlng[i].lat, latlng[i].lng));
                    }
                    map.fitBounds(latlngbounds);

                    green_clicked = null;
                }
            }
        });

        markers[markers.length] = marker;

        zIndex++;
    }
    function clearOverlays() {
      for (var i = 0; i < markers.length; i++ ) {
        markers[i].setMap(null);
      }
      markers.length = 0;
    }

  </script>
<% end %>

<div class="page-container">
  <div id="content-fullwidth">
    <div class="padding">
      <div class="resource_container">
        <div id="vehicle">BMW K1200S</div>
        <div id="trip_tabs">
          <ul>
            <li><a href="#map_tab">Map</a></li>
            <li><a href="#chart_tab">Chart</a></li>
          </ul>
          <div id="map_tab">
            <div class=""><div id="discover"></div></div>
            <p>
              <b>Name:</b>
              <%= @trip.name %>
            </p>
            <p>
              <b>File:</b>
              <%= @trip.datalog.url %>
            </p>
            <p>
              <b>Description:</b>
              <%= @trip.description %>
            </p>
          </div>
          <div id="chart_tab">
            <div id="flot-graph">
              <canvas class="flot-base">
              </canvas>
            </div>
            <div class="left_div">
            <div id="choices">
              <ul>
                <li><%= check_box_tag("dataSpeed", 'yes', true) %><%= label_tag "Vehicle Speed", nil, :class => "checkbox_label" %><%= text_field_tag 'dataSpeedMul', nil, :class => "text_multiplier" %></li>
                <li><%= check_box_tag("dataRpm", 'yes', true) %><%= label_tag "Engine RPM", nil, :class => "checkbox_label" %><%= text_field_tag 'dataRpmMul', nil, :class => "text_multiplier" %></li>
                <li><%= check_box_tag("dataEngineTemp", 'yes', true) %><%= label_tag "Engine Temperature", nil, :class => "checkbox_label" %><%= text_field_tag 'dataEngineTempMul', nil, :class => "text_multiplier" %></li>
                <li><%= check_box_tag("dataAirTemp", 'yes', true) %><%= label_tag "Intake Air Temperature", nil, :class => "checkbox_label" %><%= text_field_tag 'dataAirTempMul', nil, :class => "text_multiplier" %></li>
                <li><%= check_box_tag("dataValve", 'yes', true) %><%= label_tag "Throttle Valve Position", nil, :class => "checkbox_label" %><%= text_field_tag 'dataValveMul', nil, :class => "text_multiplier" %></li>
                <li><%= check_box_tag("dataGear", 'yes', true) %><%= label_tag "Gear Position", nil, :class => "checkbox_label" %><%= text_field_tag 'dataGearMul', nil, :class => "text_multiplier" %></li>
              </ul>
            </div>
            </div>
            
            <table class="hor-zebra left_div">
              <tr>
                <td>Vehicle Speed</td>
                <td><span id="vehicleSpeedData"></span> km/h</td>
              </tr>
              <tr>
                <td>Engine RPM</td>
                <td><span id="engineRpmData"></span></td>
              </tr>
              <tr>
                <td>Engine Temp</td>
                <td><span id="engineTempData"></span> &#176C</td>
              </tr>
              <tr>
                <td>Intake Air Temp</td>
                <td><span id="airTempData"></span> &#176C</td>
              </tr>
              <tr>
                <td>Throttle Valve Pos</td>
                <td><span id="valvePosData"></span> %</td>
              </tr>
              <tr>
                <td>Gear Position</td>
                <td><div id="gearPosData"></div></td>
              </tr>
              
            </table>

          </div>
        </div>
        <div class="clear_float"></div>
        <%= link_to 'Edit', edit_user_trip_path(@user, @trip), :class => "general-button" %> 
        <%= link_to 'Back', user_trips_path(@user), :class => "general-button" %>
        <button id="trip_setting" class="general-button">Setting</button>
      </div>

    </div>
  </div>
</div>
<div id="trip_json">
  <%= render :partial => "trips/trip_json", :locals => {:globalArray => @globalArray} %>
</div>

<div id="dialog-form" title="Setting">
  <form>
    <label for="name">Marker distance (m)</label>
    <input type="text" name="marker_distance" id="marker_distance" value="200" style="width:100px">
    <input type="submit" tabindex="-1" style="position:absolute; top:-1000px">
  </form>
</div>
