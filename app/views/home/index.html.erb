<% content_for :title, Footprint32::APP_NAME %>
<% content_for :head do %>
  <meta property="og:url"    content="<%= request.original_url %>" />
  <meta property="og:title"  content="www.koedok.com - Travelling" />
  <meta property="og:site_name"  content="www.koedok.com" />
  <meta property="og:description"  content="Koedok is a traveler social media where you can make reviews about the places and share your awesome experiences to the world." />
  <meta property="og:image"  content="<%= URI.join(root_url, image_path('koedok.png')) %>" />
  <meta property="fb:app_id"  content="<%= Footprint32::Application.config.FB_APP_ID %>" />
  <meta property="og:type"  content="website" />
  <script type="text/javascript">
    var map;
    var place_marker;
    var place_icon;
    var place_latitude = 0;
    var place_longitude = 0;
    var myLatlng;
    var places = new Array();
    var places_marker = new Array();
    var clustered_marker = new Array();
    var info_windows = new Array();
    var place_info = {};
    var maininfowindow;
    var markerCluster = null;
    var clusters;
    var box = null;
    var box2 = null;

    function set_discover_size()
    {
      var windowWidth = $(window).width();// - 200;
      var windowHeight = $(window).height();
      var discoverHeight = windowHeight - 100;
      $('#discover').css({'width':windowWidth ,'height':discoverHeight });
      if (windowWidth < 1050)
        windowWidth = 1050;
      $('.stacked_view_box').css({'width':windowWidth });
      //$('.news_feed').css({'height':discoverHeight });
    }
    function resize_map() {
      set_discover_size();
      google.maps.event.trigger(map, "resize");
    };

    function display_marker(place_info)
    {
      var index_marker = place_info["index"];
      $("html, body").animate({ scrollTop: 0 }, "slow");
      close_all_info_windows();
      google.maps.event.trigger(places_marker[index_marker], 'click');
    }

    $(document).ready(function(){

      /*$('#hideshow').on('click', function(event) {
         $('.stacked_view_box').toggle('show');
      });*/
      set_discover_size();

      var resizeTimer;
      $(window).resize(function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(resize_map, 100);
      });

      $('.show_on_map').on('click', function(event){
        event.preventDefault();
        place_info = {};
        place_info["index"] = parseInt($(this).attr('data-index'));
        display_marker(place_info);
      });

      myLatlng = new google.maps.LatLng(place_latitude, place_longitude);
      var mapOptions = {
        zoom: 2,
        center: myLatlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        //mapTypeId: google.maps.MapTypeId.SATELLITE
      };
      map = new google.maps.Map(document.getElementById("discover"), mapOptions);

      //markerCluster = new MarkerClusterer(map);
      google.maps.event.addListener(map, 'idle', ajax_request_marker);
      //google.maps.event.addListener(map, 'dragend', test);
      //test();
      
      //show_markers();

      function ajax_request_marker()
      {
        var bounds = map.getBounds();
        /*if (box2 != null)
        {
          box2.setMap(null);
        }
        box2 = new google.maps.Rectangle({
          bounds : bounds,
          map : map,
          strokeColor : 'red',
          strokeWeight : 2,
          fillOpacity : 0,
          clickable : false
        });*/
        
        var ne = bounds.getNorthEast();
        var sw = bounds.getSouthWest();

        var spherical = google.maps.geometry.spherical;
        //var width = spherical.computeDistanceBetween(sw.lat(), ne.lat()) * 0.1;
        //var height = spherical.computeDistanceBetween(sw.lng(), ne.lng()) * 0.1;

        //var distance = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));
        var distance = spherical.computeDistanceBetween(sw, ne) * 0.05;

        sw = spherical.computeOffset(sw, distance, 45);
        ne = spherical.computeOffset(ne, distance, -135);
        /*if (box != null)
        {
          box.setMap(null);
        }
        box = new google.maps.Rectangle({
          bounds : new google.maps.LatLngBounds(sw, ne),
          map : map,
          strokeColor : 'green',
          strokeWeight : 2,
          fillOpacity : 0,
          clickable : false
        });*/
        

        var location = "b1=" + sw.lat() + "&b2=" + sw.lng() + "&b3=" + ne.lat() + "&b4=" + ne.lng();
        //var location = "b1=" + "62.83508901142282" + "&b2=" + "150.64453125" + "&b3=" + "27.371767300523047" + "&b4=" + "-114.08203125";
        $.ajax({
          type: "GET",
          url: '<%= home_index_url(format: :js) %>',
          data: location,
          success: function(data) {
            show_markers();
          }
        });
        //show_markers();
      }
    });

    

    /*$(document).ajaxComplete(function(event, request) {
      show_markers();

      $('.show_on_map').on('click', function(event){
        event.preventDefault();
        place_info = {};
        place_info["index"] = parseInt($(this).attr('data-index'));
        display_marker(place_info);
      });
    });*/
    function show_markers()
    {
      var i;
      //var bounds;
      places = [];
      
      //var mcOptions = {gridSize: 50, maxZoom: 15};
      close_all_info_windows();
      info_windows.length = 0;

      if ($('#my_vars_json').length)
      {
        var myVarsJSON = $("#my_vars_json").html(),
          places = $.parseJSON(myVarsJSON);
        clear_overlays();
        /*if (markerCluster != null)
        {
          markerCluster.clearMarkers();
        }*/
        for (i = 0; i < places.length; i++)
        {
            create_marker(places[i]);
        }
        //markerCluster.addMarkers(places_marker);
        //clusters = markerCluster.getClusters();

        /*clustered_marker.length = 0;
        for( var i=0, l=clusters.length; i<l; i++ ){
            for( var j=0, le=clusters[i].markers_.length; j<le; j++ ){
              if (le > 1)
              {
                clustered_marker.push(clusters[i].markers_[j]);
                //marker = clusters[i].markers_[j]; // <-- Here's your clustered marker
              }
            }
        }*/
        /*for (i in places_marker) {
          if ($.inArray(places_marker[i], clustered_marker) == -1)
          {
            info_windows[i].open(map,places_marker[i]);
          }
        }*/

        //open_all_info_windows();
        /*bounds = new google.maps.LatLngBounds();
        for(i = 0; i < places_marker.length; i++) {
          bounds.extend(places_marker[i].getPosition());
        }
        map.fitBounds(bounds);*/

        /*google.maps.event.addListener(markerCluster, 'mouseover', function(cluster) {
          var content = '';

          // Convert lat/long from cluster object to a usable MVCObject
          var info = new google.maps.MVCObject;
          info.set('position', cluster.center_);

          //----
          //Get markers
          var markers1 = cluster.getMarkers();

          var titles = "";
          //Get all the titles
          for(var i = 0; i < markers1.length; i++) {
              titles += markers1[i].getTitle() + "\n";
          }
          //----


          var infowindow1 = new google.maps.InfoWindow();
          infowindow1.close();
          infowindow1.setContent(titles); //set infowindow content to titles
          infowindow1.open(map, info);

      });*/




      }
    }
    function clear_overlays() {
      //close_all_info_windows();
      if (info_windows.length > 0) {
        for (i in info_windows) {
          info_windows[i].setMap(null);
        }
      }
      info_windows.length = 0;
      if (places_marker.length > 0) {
        for (i in places_marker) {
          places_marker[i].setMap(null);
        }
      }
      places_marker.length = 0;
      /*if (markerCluster)
      {
        markerCluster.clearMarkers();
      }*/
        //markerCluster.setMap(null);
    }
    function close_all_info_windows() {
      for (var i = 0; i < info_windows.length; i++) {
         info_windows[i].close();
      }
    }
    function open_all_info_windows() {
      for (var i = 0; i < info_windows.length; i++) {
         info_windows[i].open(map,places_marker[i]);
      }
    }
    function create_marker(place_info)
    {
      var contentString;
      var infowindow;
      //var image;
      var marker;
      var latlng;
      var image_height;
      var map_zoom;
      var z_index = 1;

      //image = "/assets/images/marker-icon-small.png";
      //image = new google.maps.MarkerImage(
      //    place_info["image"],
      //    null, /* size is determined at runtime */
      //    null, /* origin is 0,0 */
      //    null, /* anchor is bottom center of the scaled image */
      //    new google.maps.Size(40, 40)
      //  );

      latlng = new google.maps.LatLng(place_info["latitude"], place_info["longitude"]);
      /*marker = new google.maps.Marker({
        position: latlng,
      //  map: map,
        icon: image,
        title: place_info["name"]
      });*/
      map_zoom = map.getZoom();
      if (map_zoom < 5)
      {
        if (place_info["rate"] >= 1){
          image_height = 20;
          z_index = 10;
        }else{
          image_height = 10;
          z_index = 1;
        }
      }else if (map_zoom < 8){
        if (place_info["rate"] >= 1){
          image_height = 30;
          z_index = 10;
        /*}else if (place_info["rate"] >= 1){
          image_height = 20;*/
        }else{
          image_height = 20;
          z_index = 1;
        }
      }else if (map_zoom < 10){
        if (place_info["rate"] >= 1){
          image_height = 40;
          z_index = 10;
        }else{
          image_height = (map.getZoom() + 1) * 4;
          z_index = 1;
        }
      }else{
        if (place_info["rate"] >= 1){
          image_height = 40;
          z_index = 10;
        }else{
          image_height = (map.getZoom() + 1) * 5;
          z_index = 1;
        }
      }
      if (place_info["image"] != "/assets/city.png")
      {
        z_index += 1;
      }
      /*if (place_info["rate"] > 2)
        image_height = 80;
      else if (place_info["rate"] > 1)
        image_height = 40;
      else
        image_height = (map.getZoom() + 1) * 8;*/

      //if (place_info["rate"] < 50)
        marker = new RichMarker({
          position: latlng,
          map: map,
          draggable: false,
          anchor: RichMarkerPosition.MIDDLE,
          content: '<div class="rich_marker"><img style="height:'+ image_height + 'px;" src="' + place_info["image"] + '" title="' + place_info["name"] + '"/></div>'
        });
        marker.setZIndex(z_index);
      /*else
        marker = new RichMarker({
          position: latlng,
          map: map,
          draggable: false,
          anchor: RichMarkerPosition.MIDDLE,
          content: '<div class="rich_marker"><img src="' + place_info["image"] + '" title="' + place_info["name"] + '"/></div>'
        });*/

      if (place_info["type"] == "Place") {
        /*if (place_info["last_review"] != "")
          contentString = '<div class="infowindow"><div class="infowindow_image"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["street"] + '<br/>' + place_info["city"] + '<br/>' + place_info["region"] + ', ' + place_info["country"] + '<div class="infowindow_desc"><span class="wordwrap">' + place_info["desc"] + '</span></div><div class="last_review">' + place_info["last_review"] + " ... " + '<a href="' + place_info["last_reviewer_path"] + '" class="italic">' + place_info["last_reviewer"] + '</a></div></div></div>';
        else
          contentString = '<div class="infowindow"><div class="infowindow_image"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["street"] + '<br/>' + place_info["city"] + '<br/>' + place_info["region"] + ', ' + place_info["country"] + '<div class="infowindow_desc"><span class="wordwrap">' + place_info["desc"] + '</span></div></div></div>';*/
        contentString = '<div class="infowindow_small"><div class="infowindow_image_small"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content_small"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["city"] + '<br/>' + place_info["country"] + '</div></div>';
      }
      else {
        /*if (place_info["last_review"] != "")
          contentString = '<div class="infowindow"><div class="infowindow_image"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["region"] + ', ' + place_info["country"] + '</div><div class="last_review">' + place_info["last_review"] + " ... " + '<a href="' + place_info["last_reviewer_path"] + '" class="italic">' + place_info["last_reviewer"] + '</a></div></div>';
        else
          contentString = '<div class="infowindow"><div class="infowindow_image"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["region"] + ', ' + place_info["country"] + '</div></div>';*/
        contentString = '<div class="infowindow_small"><div class="infowindow_image_small"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content_small"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["country"] + '</div></div>';
      }
      infowindow = new google.maps.InfoWindow({
        content: contentString,
        disableAutoPan: true
      });
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map, marker);
      });
      /*google.maps.event.addListener(marker, 'mouseover', function(event) {
        this.setZIndex(10);
      });
      google.maps.event.addListener(marker, 'mouseout', function(event) {
        this.setZIndex(1);
      });*/
      //infowindow.open(map,marker);
      info_windows.push(infowindow);
      places_marker.push(marker);

      //marker.setMap(map);
    }
    /*function create_marker_city(place_info)
    {
      var contentString;
      var infowindow;
      var image;
      var marker;
      var latlng;

      image = "/assets/images/marker-icon.png";
      latlng = new google.maps.LatLng(place_info["latitude"], place_info["longitude"]);
      marker = new google.maps.Marker({
        position: latlng,
        map: map,
        icon: image
      });

      contentString = '<div class="infowindow"><div class="infowindow_image"><a href="' + place_info["path"] + '"><img src="' + place_info["image"] + '" class="photo_in_profile" alt=""></a></div><div class="infowindow_content"><div class="bold_text"><a href="' + place_info["path"] + '">' + place_info["name"] + '</a></div>' + place_info["region"] + ', ' + place_info["country"] + '</div></div>';
      infowindow = new google.maps.InfoWindow({
        content: contentString
      });
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map, marker);
      });
      info_windows.push(infowindow);
      places_marker.push(marker);
    }*/
  </script>

<% end %>

<div class="page-container-full">
  <div id="header-map" class="left_div">
    <div id="discover"></div>
    <div class="stacked_view_box">
      <%#*<div class="padding">%>
        <div class="most_popular_places">
          <%#*<span class="padding-title">%>
          <%#= link_to "Most popular cities", {:option => "city"}, :remote => true, :class => "general" %>
          <%#= link_to "Most popular places", {:option => "place"}, :remote => true, :class => "general" %>
          <%#= link_to "Recent updates", {:option => "recent"}, :remote => true, :class => "general" %>
          <%#= render :partial => "shared/progress_indicator" %>
          <%#*</span>%>
          <%#*<div id="paginator_place">%>
            <%#= paginate @result, :remote => true, :param_name => "place_page", :theme => "slider" %>
          <%#*</div>%>
          <%#*<div class="place-found-wrapper">%>
          <%#*<div class="places-found-dock">%>
            
            <div id="place_partial">
              <%= render :partial => "home/index", :locals => {:result => @result, :result_list => @result_list} %>
            </div>
            
          <%#*</div>%>
          <%#*</div>%>
          <div class="clear_float"></div>
        </div>
      <%#*</div>%>
    </div>
  </div>
  <%#= subscribe_to '/activities/new' %>
  <%#*<div class="news_feed left_div">%>
    <%#*<div id="new_newsfeed"></div>%>
    <%#= render :partial => 'home/activity', :collection => @activities %>
  <%#*</div>%>
  <div class="clear_float"></div>
  <%#= render :partial => "shared/stacked_view_button" %>
  <% if user_signed_in? %>
    <%= render :partial => "shared/trip_button" %>
  <% end %>
</div>